package cardgames;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Scanner;

import player.Player;
import cards.Card;

public class BlackJackMulti extends CardGame implements Serializable {
	
	private ArrayList<Card> dealerHand;
	
	//These are all linked together The arrays order determines the player it corresponds
	private ArrayList<Player> playersPlaying;
	private ArrayList<Integer> playersPlayingBet;
	private ArrayList<Integer> playersPlayingMoney;
	private ArrayList<Integer> stayOrHitting;
	
	
	public BlackJackMulti(ArrayList<Player> names){
		
		//Initialize Players and their money and their state
		playersPlaying = new ArrayList<Player>();
		playersPlayingMoney = new ArrayList<Integer>();
		playersPlayingBet = new ArrayList<Integer>();
		stayOrHitting = new ArrayList<Integer>();
		for (int i=0; i<names.size(); i++) {
			playersPlaying.add(names.get(i));
			playersPlayingMoney.add(500);
			playersPlayingBet.add(0);
			//stayOrHitting initialized to 0 which = hit
			stayOrHitting.add(0);
		}
		
		fillDeck();
		dealCards();
		
	}
	public int playerIndex(Player aPlayer){
		int numPlayers = playersPlaying.size();
		int index = 0;
		
		for(int i = 0; i < numPlayers; i++){
			if(aPlayer.userName.equals(playersPlaying.get(i).userName)){
				index = i;
			}
		}
		return index;
	}
	
	//ask player to buy in
	public void askForBuyIn(Player aPlayer){
		//If the player has no money, he is given an extra 500
		if(playersPlayingMoney.get(playerIndex(aPlayer)) < 1){
			playersPlayingMoney.set(playerIndex(aPlayer),500);
		}
		
		//ask to bet
		int valueEntered = 0;
		while(valueEntered == 0){
			System.out.println(aPlayer.userName+" please bet an amount greater than 0 but no more than "+playersPlayingMoney.get(playerIndex(aPlayer)));
			Scanner playerInput = new Scanner( System.in );
			valueEntered = playerInput.nextInt();
			if(valueEntered > 0 && valueEntered < playersPlayingMoney.get(playerIndex(aPlayer))){
				playersPlayingMoney.set(playerIndex(aPlayer),playersPlayingMoney.get(playerIndex(aPlayer))-valueEntered);
				playersPlayingBet.set(playerIndex(aPlayer),valueEntered);
			}
			else {
				valueEntered = 0;
			}
		}
	}
	
	//ask all players Playing to buy in
	public void askAllToBuyIn(){
		int numPlayers = playersPlaying.size();
		
		for(int i = 0; i < numPlayers; i++){
			askForBuyIn(playersPlaying.get(i));
		}
	}
	
	//deals the cards to all the players in the game
	public void dealCards(){
		int numPlayers = playersPlaying.size();
		
		//1 card to each player
		for(int i = 0; i < numPlayers; i++){
			playersPlaying.get(i).addCardToHand(getTopOfDeck());
		}
		
		//1 card to dealer
		dealerHand.add(getTopOfDeck());
		//1 card to the player again
		for(int i = 0; i < numPlayers; i++){
			playersPlaying.get(i).addCardToHand(getTopOfDeck());
		}
		//1 card to dealer again
		dealerHand.add(getTopOfDeck());
	}

	@Override
	public void setup() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void testSetup() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayList<Player> getWinner() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public LinkedList<Integer> getHandSizes() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void update() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean getGameover() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public LinkedList<Card> getCardsToDisplay() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ArrayList<Player> getPlayers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Player getTurn() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getPot() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getExpectedBet() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean updateReady() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void setBet(Player p, int bet) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void nextTurn(Player curP) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void fold(Player p) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean isHandOver() {
		// TODO Auto-generated method stub
		return false;
	}
	
	public static void main(String[] args){
		Player player1 = new Player("Santi");
		Player player2 = new Player("Dom");
		Player player3 = new Player("Deven");
		
		ArrayList<Player> players = new ArrayList<Player>();
		players.add(player1);
		players.add(player2);
		players.add(player3);
		
		BlackJackMulti test1 =  new BlackJack();
		
	}

}
